@startuml
'https://plantuml.com/sequence-diagram
skinparam linetype polyline
'skinparam linetype ortho

'top to bottom direction
left to right direction
'skinparam classAttributeIconSize 0
'Type	       Symbol
'Extension	    <|--
'Composition	*--
'Aggregation	o--

class User {
    - id
    - username
    - hashPassword
    - email
    - role
    - createdAt
    - updatedAt
    - lastLogin

    + getOneUser() : UserEntity
    + getAllUser() : UserEntity[]
    + createUser() : UserEntity
    + updateUser() : void
    + DeleteUser() : void
}
'<<enumeration>>
enum UserRoleEum {
    - customer
    - employee
    - admin
}

class Employee {
    - id
    - name
    - surname
    - phone
    - role
    - addressId
    - userId

    + getOneEmployee() : EmployeeEntity
    + getAllEmployee() : EmployeeEntity[]
    + createEmployee() : EmployeeEntity
    + updateEmployee() : void
    + DeleteEmployee() : void
}

class Customer {
    - id
    - name
    - surname
    - phone
    - addressId

    + getOneCustomer() : CustomerEntity
    + getAllCustomer() : CustomerEntity[]
    + createCustomer() : CustomerEntity
    + updateCustomer() : void
    + DeleteCustomer() : void
}

class Address {
    - id
    - houseNumber
    - village
    - subDistrict
    - district
    - province
    - zipCode

    + getOneAddress() : AddressEntity
    + getAllAddress() : AddressEntity[]
    + createAddress() : AddressEntity
    + updateAddress() : void
    + DeleteAddress() : void
}

class Supplier {
    - id
    - name
    - phone
    - email
    - addressId

    + getOneSupplier() : SupplierEntity
    + getAllSupplier() : SupplierEntity[]
    + createSupplier() : SupplierEntity
    + updateSupplier() : void
    + DeleteSupplier() : void
}

'<<enumeration>>
enum EmployeeRoleEum {
    - ceo
    - cashier
    - Manager
    - financial
}



class Stock {
    - id
    - qty
    - createdAt
    - updatedAt
    - productId

    + getOneStock() : StockEntity
    + getAllStock() : StockEntity[]
    + createStock() : StockEntity
    + updateStock() : void
    + DeleteStock() : void
}

class Promotion {
    - id
    - desc
    - iat
    - exp
    - discountPercent
    - discountValue
    - productId
    - createdAt
    - updatedAt

    + getOnePromotion() : PromotionEntity
    + getAllPromotion() : PromotionEntity[]
    + createPromotion() : PromotionEntity
    + updatePromotion() : void
    + DeletePromotion() : void
}

class Product {
    - id
    - name
    - desc
    - brand
    - price
    - exp
    - mfg
    - categoryId
    - createdAt
    - updatedAt

    + getOneProduct() : ProductEntity
    + getAllProduct() : ProductEntity[]
    + createProduct() : ProductEntity
    + updateProduct() : void
    + DeleteProduct() : void
}

class Category {
    - id
    - name
    - desc

    + getOneCategory() : CategoryEntity
    + getAllCategory() : CategoryEntity[]
    + createCategory() : CategoryEntity
    + updateCategory() : void
    + DeleteCategory() : void
}

class Invoice {
    - id
    - employeeId
    - createdAt
    - updatedAt

    + getOneInvoice() : InvoiceEntity
    + getAllInvoice() : InvoiceEntity[]
    + createInvoice() : InvoiceEntity
    + updateInvoice() : void
    + DeleteInvoice() : void
}

class Order {
    - id
    - invoiceId
    - customerId
    - employeeId
    - createdAt
    - updatedAt

    + getOneOrder() : OrderEntity
    + getAllOrder() : OrderEntity[]
    + createOrder() : OrderEntity
    + updateOrder() : void
    + DeleteOrder() : void
}

enum OrderStatusEnum {
    - pending
    - cancel
    - complete
}

class Sell {
    - id
    - qty
    - productId
    - employeeId
    - orderId
    - createdAt
    - updatedAt

    + getOneSell() : SellEntity
    + getAllSell() : SellEntity[]
    + createSell() : SellEntity
    + updateSell() : void
    + DeleteSell() : void
}

class Receipt {
    - id
    - totalPrice
    - orderId
    - createdAt
    - updatedAt


    + getOneReceipt() : ReceiptEntity
    + getAllReceipt() : ReceiptEntity[]
    + createReceipt() : ReceiptEntity
    + updateReceipt() : void
    + DeleteReceipt() : void

}


'class Transaction {
'    - id
'    - status
'    - createdAt
'    - updatedAt
'
'    + getOneTransaction() : TransactionEntity
'    + getAllTransaction() : TransactionEntity[]
'    + createTransaction() : TransactionEntity
'    + updateTransaction() : void
'    + DeleteTransaction() : void
'}
'enum transactionStatusEnum {
'    - pending
'    - cancel
'    - complete
'}

class SellReport {
    - id
    - revenue
    - totalQty
    - total
    - startDate
    - endDate
    - employeeId
    - createdAt
    - updatedAt

    + getOneSellReport() : SellReportEntity
    + getAllSellReport() : SellReportEntity[]
    + createSellReport() : SellReportEntity
    + updateSellReport() : void
    + DeleteSellReport() : void
}

class StockOrder {
    - id
    - qty
    - productId
    - supplierId
    - employeeId
    - invoiceId
    - createdAt
    - updatedAt

    + getOneStockOrder() : StockOrderEntity
    + getAllStockOrder() : StockOrderEntity[]
    + createStockOrder() : StockOrderEntity
    + updateStockOrder() : void
    + DeleteStockOrder() : void
}


User "*" -up-> "1" UserRoleEum
Employee "*" --|> "1"   User
Customer "*" -right-|> "1"   User

Product "1" *-- "0..*" Stock
Product "*" -right- "1" Employee : "Manage"

Employee "1" -- "1..*" Stock : "Manage"

Product "*" -left-* "1" Category
Product "1..*" --* "1" Supplier

'Transaction "1" *-- "1" Invoice
'Transaction "1" *-- "1" Receipt
'Employee "1" *-- "0..1" Transaction
'Customer "1" *-- "0..1" Transaction
'Order "1..*" --*  "1" Transaction
'Transaction  -left->  transactionStatusEnum
'Sell "1..*" --* "1" Transaction

Sell "0..*" --* "1" Employee
Sell "0..*" --* "1" Customer

Sell "0..*" --* "1" Order
Sell "1" --* "1..*" Product


'Receipt "0..*" --* "1" Customer
'Receipt "0..*" --* "1" Employee


Order "1" *-- "1" Receipt
Order "1..*" --* "1" Customer
Order --> OrderStatusEnum
Order "1" --* "1" Invoice

'Order "1" -- "*" Stock : "check"

Employee  -up->  EmployeeRoleEum

Employee "1" -- "*" Invoice : "Manage"
Employee "1" -- "*" Receipt : "Manage"

Employee "1" -- "*" Supplier : "Contact"
Order "*" --* "1" Employee : "Manage"



Promotion "0..*" -up-* "1" Product

Address "1" -- "1" Supplier : "has"
Customer "1" -- "1" Address : "has"
Employee "1" -- "1" Address : "has"

StockOrder "1..*" --* "1" Invoice

StockOrder "1" --* "1..*" Product
StockOrder "*" --* "*" Employee
StockOrder "1" -right-* "1..*" Supplier

SellReport "*" -- "1" Employee : "Manage"



@enduml