@startuml
'example
title create order sequence diagram

actor Customer as actorCustomer

actor Salesperson as actorSalesperson
participant "Inventory System" as InventorySystem
participant "Order" as classOrder
participant "Product" as classProduct
participant "Stock" as classStock
participant "Invoice" as classInvoice


actorCustomer -> actorSalesperson : 1. Request order product

actorSalesperson --> actorCustomer : 2. Receive order

actorSalesperson -> InventorySystem: 3. RequestCreateOrder
activate InventorySystem

InventorySystem -> classProduct: 3.1 selectProduct
activate classProduct

classProduct -> classStock: 3.2 checkStock
activate classStock

classStock -> classProduct: 3.3 return stock
deactivate classStock

classProduct -> InventorySystem: 3.4 return product data
deactivate classProduct

alt IF (orderData.qty > product.stock.qty)
classStock --> InventorySystem : 3.5 can't create order
'deactivate InventorySystem
 destroy InventorySystem

else ELSE

InventorySystem -> classOrder: 3.6 createOrder(orderData)
activate classOrder
activate InventorySystem

classOrder -> classStock: 3.7 update stock
activate classStock

classStock --> InventorySystem : 3.8 return update stock
deactivate classStock


classOrder -> classInvoice : 3.9 system create invoice
activate classInvoice
classInvoice -> classInvoice : 3.10 print invoice
classInvoice --> InventorySystem: 3.11 return invoice




deactivate classInvoice
classOrder --> InventorySystem: 3.12 return order
deactivate classOrder

end


InventorySystem -> actorSalesperson: 4. Response create order status
deactivate InventorySystem




@enduml