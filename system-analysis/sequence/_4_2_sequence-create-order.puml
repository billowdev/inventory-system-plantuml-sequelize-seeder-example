@startuml
'example
title create order sequence diagram

actor Customer as actorCustomer

actor Salesperson as actorSalesperson
participant "Inventory System" as InventorySystem
participant "Order" as classOrder
participant "Product" as classProduct
participant "Inventory" as classInventory
participant "Invoice" as classInvoice


actorCustomer -> actorSalesperson : 1. Request order product

actorSalesperson --> actorCustomer : 2. Receive order

actorSalesperson -> InventorySystem: 3. RequestCreateOrder
activate InventorySystem

'-------------- START create order ---------------
InventorySystem -> classProduct: 3.1 selectProduct
activate classProduct

classProduct -> classInventory: 3.2 checkStock
activate classInventory

classInventory -> classProduct: 3.3 return stock
deactivate classInventory

classProduct -> InventorySystem: 3.4 return product data
deactivate classProduct

alt IF (orderData.qty > product.inventory.qty)
classInventory --> InventorySystem : 3.5 can't create order
'deactivate InventorySystem
 destroy InventorySystem

else ELSE

InventorySystem -> classOrder: 3.6 createOrder(orderData)
activate classOrder
activate InventorySystem

classOrder -> classInventory: 3.7 update stock
activate classInventory

classInventory --> classOrder: 3.8 return update stock
deactivate classInventory

classOrder -> classInvoice : 3.8 system create invoice

activate classInvoice
classInvoice -> classInvoice : 3.9 print invoice
classInvoice --> InventorySystem: 3.10 return invoice

deactivate classInvoice
classOrder --> InventorySystem: 3.11 return order
deactivate classOrder

end


InventorySystem -> actorSalesperson: 4. Response create order status
deactivate InventorySystem




@enduml